From 88832e13886957e8f06f608085a20714e32891c6 Mon Sep 17 00:00:00 2001
From: Rainer Poisel <rainer.poisel@gmail.com>
Date: Sat, 3 Dec 2022 23:54:19 +0100
Subject: [PATCH] chore: use `static const` instead of `static constexpr` in
 class context

---
 src/mqtt/client.h            | 2 +-
 src/mqtt/message.h           | 4 ++--
 src/mqtt/subscribe_options.h | 8 ++++----
 src/mqtt/thread_queue.h      | 2 +-
 src/mqtt/will_options.h      | 4 ++--
 5 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/mqtt/client.h b/src/mqtt/client.h
index 6900aed..bd8503a 100644
--- a/src/mqtt/client.h
+++ b/src/mqtt/client.h
@@ -40,7 +40,7 @@ class client : private callback
 	/** An arbitrary, but relatively long timeout */
 	static const std::chrono::seconds DFLT_TIMEOUT;
 	/** The default quality of service */
-	static constexpr int DFLT_QOS = 1;
+	static const int DFLT_QOS = 1;
 
 	/** The actual client */
 	async_client cli_;
diff --git a/src/mqtt/message.h b/src/mqtt/message.h
index 4cb95a6..228aa05 100644
--- a/src/mqtt/message.h
+++ b/src/mqtt/message.h
@@ -55,9 +55,9 @@ class message
 {
 public:
 	/** The default QoS for a message */
-	static constexpr int DFLT_QOS = 0;
+	static const int DFLT_QOS = 0;
 	/** The default retained flag */
-	static constexpr bool DFLT_RETAINED = false;
+	static const bool DFLT_RETAINED = false;
 
 private:
 	/** Initializer for the C struct (from the C library) */
diff --git a/src/mqtt/subscribe_options.h b/src/mqtt/subscribe_options.h
index 753c811..3e22a99 100644
--- a/src/mqtt/subscribe_options.h
+++ b/src/mqtt/subscribe_options.h
@@ -53,17 +53,17 @@ public:
 	using const_ptr_t = std::shared_ptr<const subscribe_options>;
 
 	/** Don't receive our own publications */
-	static constexpr bool SUBSCRIBE_NO_LOCAL = true;
+	static const bool SUBSCRIBE_NO_LOCAL = true;
 	/** Receive our own publications */
-	static constexpr bool SUBSCRIBE_LOCAL = false;
+	static const bool SUBSCRIBE_LOCAL = false;
 
 	/**
 	 * Retain flag is only set on publications sent by a broker if in
 	 * response to a subscribe request
 	 */
-	static constexpr bool NO_RETAIN_AS_PUBLISHED = false;
+	static const bool NO_RETAIN_AS_PUBLISHED = false;
 	/** Keep the retain flag as on the original publish message */
-	static constexpr bool RETAIN_AS_PUBLISHED = true;
+	static const bool RETAIN_AS_PUBLISHED = true;
 
 	/** The options for subscription retain handling */
 	enum RetainHandling {
diff --git a/src/mqtt/thread_queue.h b/src/mqtt/thread_queue.h
index 5dafe6e..92dfbba 100644
--- a/src/mqtt/thread_queue.h
+++ b/src/mqtt/thread_queue.h
@@ -76,7 +76,7 @@ public:
 	using size_type = typename Container::size_type;
 
 	/** The maximum capacity of the queue. */
-	static constexpr size_type MAX_CAPACITY = std::numeric_limits<size_type>::max();
+	static const size_type MAX_CAPACITY = std::numeric_limits<size_type>::max();
 
 private:
 	/** Object lock */
diff --git a/src/mqtt/will_options.h b/src/mqtt/will_options.h
index 8c5c67d..2d85e66 100644
--- a/src/mqtt/will_options.h
+++ b/src/mqtt/will_options.h
@@ -49,9 +49,9 @@ class will_options
 {
 public:
 	/** The default QoS for the LWT, if unspecified */
-	static constexpr int DFLT_QOS = 0;
+	static const int DFLT_QOS = 0;
 	/** The defalut retained flag for LWT, if unspecified */
-	static constexpr bool DFLT_RETAINED = false;
+	static const bool DFLT_RETAINED = false;
 
 private:
 	/** A default C struct to support re-initializing variables */
-- 
2.38.1

